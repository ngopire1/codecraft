import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { User } from "@/entities/User";
import { 
  BookOpen, 
  Code, 
  Trophy, 
  MessageSquare,
  Zap,
  Star,
  TrendingUp,
  Target,
  Award,
  ArrowRight
} from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";

export default function Dashboard() {
  const [user, setUser] = useState(null);

  useEffect(() => {
    loadUser();
  }, []);

  const loadUser = async () => {
    try {
      const userData = await User.me();
      setUser(userData);
    } catch (error) {
      console.log("User not authenticated");
    }
  };

  const dashboardSections = [
    {
      title: "Learn",
      description: "Master JavaScript, Python & CSS with interactive lessons",
      icon: BookOpen,
      color: "from-green-500 to-emerald-600",
      bgColor: "bg-green-50",
      textColor: "text-green-600",
      url: createPageUrl("Learn"),
      stats: `${user?.completed_lessons?.length || 0} lessons completed`
    },
    {
      title: "Projects", 
      description: "Build real-world applications and showcase your skills",
      icon: Code,
      color: "from-purple-500 to-violet-600",
      bgColor: "bg-purple-50",
      textColor: "text-purple-600",
      url: createPageUrl("Projects"),
      stats: `${user?.completed_projects?.length || 0} projects built`
    },
    {
      title: "Challenges",
      description: "Compete in coding contests and improve your problem-solving",
      icon: Trophy,
      color: "from-orange-500 to-red-600", 
      bgColor: "bg-orange-50",
      textColor: "text-orange-600",
      url: createPageUrl("Challenges"),
      stats: `${user?.completed_challenges?.length || 0} challenges solved`
    },
    {
      title: "Live Chat",
      description: "Connect with fellow coders and collaborate in real-time",
      icon: MessageSquare,
      color: "from-pink-500 to-rose-600",
      bgColor: "bg-pink-50", 
      textColor: "text-pink-600",
      url: createPageUrl("Chat"),
      stats: "Join the community"
    }
  ];

  const achievements = [
    { name: "First Steps", description: "Complete your first lesson", earned: (user?.completed_lessons?.length || 0) > 0 },
    { name: "Builder", description: "Complete your first project", earned: (user?.completed_projects?.length || 0) > 0 },
    { name: "Champion", description: "Win your first challenge", earned: (user?.completed_challenges?.length || 0) > 0 },
    { name: "Streak Master", description: "Maintain a 7-day learning streak", earned: (user?.learning_streak || 0) >= 7 }
  ];

  return (
    <div className="min-h-screen p-6 lg:p-8">
      <div className="max-w-7xl mx-auto">
        {/* Hero Section */}
        <div className="mb-8">
          <div className="text-center mb-8">
            <h1 className="text-4xl lg:text-5xl font-bold mb-4">
              Welcome to{" "}
              <span className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
                CodeQuest
              </span>
            </h1>
            <p className="text-xl text-slate-600 mb-6">
              Your journey to programming mastery starts here
            </p>
            
            {user && (
              <div className="flex flex-wrap justify-center gap-4 mb-6">
                <Badge className="bg-gradient-to-r from-blue-500 to-purple-500 text-white px-4 py-2 text-lg">
                  <Star className="w-4 h-4 mr-2" />
                  {user.total_points || 0} Points
                </Badge>
                <Badge className="bg-gradient-to-r from-amber-500 to-orange-500 text-white px-4 py-2 text-lg">
                  <Zap className="w-4 h-4 mr-2" />
                  {user.learning_streak || 0} Day Streak
                </Badge>
                <Badge className="bg-gradient-to-r from-green-500 to-emerald-500 text-white px-4 py-2 text-lg">
                  <TrendingUp className="w-4 h-4 mr-2" />
                  {user.skill_level || 'Beginner'}
                </Badge>
              </div>
            )}
          </div>
        </div>

        {/* Main Navigation Cards */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {dashboardSections.map((section, index) => (
            <Card 
              key={section.title} 
              className="group hover:scale-[1.02] transition-all duration-300 cursor-pointer border-2 hover:border-slate-300 hover:shadow-xl"
            >
              <Link to={section.url}>
                <CardHeader className="pb-3">
                  <div className={`w-12 h-12 rounded-xl bg-gradient-to-r ${section.color} flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300`}>
                    <section.icon className="w-6 h-6 text-white" />
                  </div>
                  <CardTitle className="text-xl font-bold text-slate-800">
                    {section.title}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-slate-600 mb-4 leading-relaxed">
                    {section.description}
                  </p>
                  <div className="flex items-center justify-between">
                    <span className={`text-sm font-medium ${section.textColor}`}>
                      {section.stats}
                    </span>
                    <ArrowRight className="w-4 h-4 text-slate-400 group-hover:text-slate-600 group-hover:translate-x-1 transition-all duration-300" />
                  </div>
                </CardContent>
              </Link>
            </Card>
          ))}
        </div>

        {/* Progress & Achievements */}
        <div className="grid lg:grid-cols-3 gap-6">
          {/* Learning Progress */}
          <Card className="lg:col-span-2">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Target className="w-5 h-5 text-blue-600" />
                Your Learning Journey
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-slate-700">JavaScript Mastery</span>
                  <span className="text-sm text-slate-500">65%</span>
                </div>
                <Progress value={65} className="h-2" />
              </div>
              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-slate-700">Python Proficiency</span>
                  <span className="text-sm text-slate-500">40%</span>
                </div>
                <Progress value={40} className="h-2" />
              </div>
              <div>
                <div className="flex justify-between items-center mb-2">
                  <span className="text-sm font-medium text-slate-700">CSS Styling</span>
                  <span className="text-sm text-slate-500">80%</span>
                </div>
                <Progress value={80} className="h-2" />
              </div>
            </CardContent>
          </Card>

          {/* Achievements */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Award className="w-5 h-5 text-yellow-600" />
                Achievements
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                {achievements.map((achievement, index) => (
                  <div 
                    key={achievement.name}
                    className={`p-3 rounded-lg border transition-all duration-200 ${
                      achievement.earned 
                        ? 'bg-yellow-50 border-yellow-200' 
                        : 'bg-slate-50 border-slate-200'
                    }`}
                  >
                    <div className="flex items-center gap-2 mb-1">
                      <div className={`w-6 h-6 rounded-full flex items-center justify-center ${
                        achievement.earned 
                          ? 'bg-yellow-500 text-white' 
                          : 'bg-slate-300 text-slate-500'
                      }`}>
                        <Award className="w-3 h-3" />
                      </div>
                      <span className={`font-medium text-sm ${
                        achievement.earned ? 'text-yellow-800' : 'text-slate-600'
                      }`}>
                        {achievement.name}
                      </span>
                    </div>
                    <p className={`text-xs ${
                      achievement.earned ? 'text-yellow-700' : 'text-slate-500'
                    }`}>
                      {achievement.description}
                    </p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Call to Action */}
        <div className="mt-8 text-center">
          <Card className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 border-0 text-white">
            <CardContent className="p-8">
              <h2 className="text-2xl font-bold mb-4">Ready to Level Up?</h2>
              <p className="text-blue-100 mb-6">
                Choose your path and start your coding adventure today!
              </p>
              <div className="flex flex-wrap justify-center gap-4">
                <Link to={createPageUrl("Learn")}>
                  <Button className="bg-white text-blue-600 hover:bg-blue-50 px-6 py-2">
                    Start Learning
                  </Button>
                </Link>
                <Link to={createPageUrl("Challenges")}>
                  <Button variant="outline" className="border-white text-white hover:bg-white hover:text-blue-600 px-6 py-2">
                    Take Challenge
                  </Button>
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}